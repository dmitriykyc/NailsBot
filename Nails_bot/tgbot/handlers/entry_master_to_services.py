from aiogram import Dispatcher, types
from aiogram.dispatcher import FSMContext
from aiogram.types import CallbackQuery

from Nails_bot.tgbot.keyboards.inline_choice_master import get_menu
from Nails_bot.tgbot.keyboards.inline_choice_master_data import touch_button_master
from Nails_bot.tgbot.keyboards.inline_choice_services import get_done_menu, inline_choose_category, \
    get_menu_choice_services_all, get_menu_service
from Nails_bot.tgbot.keyboards.inline_choice_services_data import choose_data_and_time, pagination, \
    category_services_touch_button, choice_services_touch_button
from Nails_bot.tgbot.keyboards.inline_datatime import get_menu_month, get_menu_day, get_menu_time
from Nails_bot.tgbot.keyboards.inline_datetime_data import create_datetime
from Nails_bot.tgbot.keyboards.reply_choice_type import menu_choice_type
from Nails_bot.tgbot.services.db_api import db_commands
from Nails_bot.tgbot.services.db_api.db_commands import select_service, get_all_masters, select_services_from_category
from Nails_bot.tgbot.services.db_api.db_gino import on_startup, close_startup


async def result_message_sum(data):
    '''–§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —É—Å–ª—É–≥ –∏ —Å—É–º–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ü–µ–Ω—ã'''
    sum_price = 0
    choose_service_list = '\n'
    for ell in data:
        service = await select_service(int(ell))
        choose_service_list += f'üî∏ {service.name}\n'
        sum_price += service.price
    return [choose_service_list, sum_price]


def register_entry_master_to_services(dp: Dispatcher):
    # –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è"
    @dp.message_handler(text='–ó–∞–ø–∏—Å–∞—Ç—å—Å—è')
    async def make_an_entry(messages: types.Message):
        await messages.answer('–û—Ç–ª–∏—á–Ω–µ–Ω—å–∫–æ, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞–∫ —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è?', reply_markup=menu_choice_type)

    # –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–í—ã–±—Ä–∞—Ç—å –º–∞—Å—Ç–µ—Ä–∞", —Ç—É—Ç –±—É–¥—É—Ç –≤—Å–µ –º–∞—Å—Ç–µ—Ä–∞, –∫ –∫–æ—Ç–æ—Ä—ã–º –±—É–¥—É—Ç –ø–æ–¥—Ç—è–≥–∏–≤–∞—Ç—å—Å—è –¥–∞—Ç—ã —Å–≤–æ–±–æ–¥–Ω—ã–µ
    @dp.message_handler(text='–í—ã–±—Ä–∞—Ç—å –º–∞—Å—Ç–µ—Ä–∞')
    async def sent_master(messages: types.Message):
        await on_startup(dp)
        masters = await get_all_masters()
        for ell in masters:
            await messages.answer_photo(photo=ell.photo_master_id, caption=f'–ú–∞—Å—Ç–µ—Ä: <b>{ell.name}</b>\n'
                                                                           f'{ell.disc_master}.\n'
                                                                           f'–†–µ–π—Ç–∏–Ω–≥: 5/5 üåü',
                                        reply_markup=get_menu(ell.master_id, way='mts'))

        await close_startup(dp)

    # –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–í—ã–±—Ä–∞—Ç—å" –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–µ –º–∞—Å—Ç–µ—Ä–∞
    @dp.callback_query_handler(touch_button_master.filter(aboute='False') and touch_button_master.filter(way='mts'))
    async def touch_inline_button(call: CallbackQuery, callback_data, state: FSMContext):

        print('----' * 100)

        id_master = callback_data['id_mast']
        await state.update_data(await state.update_data(id_master=id_master))
        await call.message.answer(f'–í—ã –≤—ã–±—Ä–∞–ª–∏ –º–∞—Å—Ç–µ—Ä–∞ - {id_master}, —Ç–µ–ø–µ—Ä—å –≤—ã–±—Ä–∞—Ç—å –¥–∞—Ç—É –∏ –≤—ã–±—Ä–∞—Ç—å –º–∞–∫—Å—Ç–µ—Ä–∞',
                                  reply_markup=get_done_menu(way='mts'))

        # await state.update_data(id_master=id_master)
        # data_state = await state.get_data()
        #
        # await on_startup(dp)  # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
        # data_for_text = await result_message_sum(data_state['services'])  # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ–∫—Å—Ç–∞
        # master = await db_commands.select_master(int(data_state['id_master']))
        # await call.message.answer(f'–í—ã –∑–∞–ø–∏—Å–∞–Ω–∏—ã –∫ –º–∞—Å—Ç–µ—Ä—É: {master.name} \n'
        #                           f'–î–∞—Ç–∞: {data_state["day"]}{data_state["month"]}.2022\n'
        #                           f'–ù–∞ —É—Å–ª—É–≥–∏: \n'
        #                           f'{data_for_text[0]}\n\n'
        #                           f'–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {data_for_text[1]} —Ä—É–±.\n\n'
        #                           f'–ñ–¥—ë–º –≤–∞—Å –ø–æ –∞–¥—Ä–µ–º—É: –ì. –ú–æ—Å–∫–≤–∞, –£–ª. –†–æ—Å—Ç–æ–∫–∏–Ω–æ 15–ê ')
        # await close_startup(dp)  # –ó–∞–∫—Ä—ã–≤–∞–µ–º –ë–î

        # –ü—Ä–æ–±–µ–≥–∞–µ–º—Å—è –ø–æ –≤—ã–±–æ—Ä—É –≥–æ–¥–∞, –º–µ—Å—è—Ü–∞, –¥–∞—Ç—ã, –≤—Ä–µ–º–µ–Ω–∏

    @dp.callback_query_handler(create_datetime.filter(way='mts'))
    async def touch_datetime(call: CallbackQuery, callback_data, state: FSMContext):

        print('-' * 100)

        await call.answer()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º —á–∞—Å—ã
        if callback_data['step'] == 'start':
            await call.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—è—Ü, –∫–æ–≥–¥–∞ —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è?')
            await call.message.edit_reply_markup(get_menu_month(callback_data['year'], way='mts'))

        if callback_data['step'] == 'get_month':
            await call.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ')
            await call.message.edit_reply_markup(get_menu_day(year=callback_data['year'],
                                                              month=callback_data['month'],
                                                              way='mts'))
        if callback_data['step'] == 'get_day':
            await call.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è:')
            await call.message.edit_reply_markup(get_menu_time(year=callback_data['year'],
                                                               month=callback_data['month'],
                                                               day=callback_data['day'],
                                                               way='mts'))

        if callback_data['step'] == 'get_time':  # –ï—Å–ª–∏ –≤—Å—ë –ø—Ä–æ–π–¥–µ–Ω–æ, —Å–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            # await call.message.delete_reply_markup()
            await state.update_data(time=callback_data['month'])
            await state.update_data(month=callback_data['month'])
            await state.update_data(day=callback_data['day'])
            state_data = await state.get_data()
            await on_startup(dp)  # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
            # data_for_text = await result_message_sum(state_data['services'])  # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ–∫—Å—Ç–∞
            await call.message.edit_text(f'–û—Ç–ª–∏—á–Ω–æ! –í—ã –≤—ã–±—Ä–∞–ª–∏ –º–∞—Å—Ç–µ—Ä–∞: –õ–µ–Ω–æ—á–∫–∞\n'
                                         f'–î–∞—Ç–∞: xx.xx.2022\n\n'
                                         f'–ù–∞–∂–º–∏—Ç–µ –≤—ã–±—Ä–∞—Ç—å —É—Å–ª—É–≥–∏:',
                                         reply_markup=inline_choose_category())
            # reply_markup=choose_master())
            await close_startup(dp)  # –ó–∞–∫—Ä—ã–≤–∞–µ–º –ë–î

    @dp.callback_query_handler(text='choose_category')
    async def choose_service(call: CallbackQuery, state: FSMContext):
        '''–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º Inline Button "–í—ã–±—Ä–∞—Ç—å —É—Å–ª—É–≥—É" '''

        print('-' * 100)

        await on_startup(dp)  # –ü–æ–¥–∫–ª—é—á–∞–µ–º –ë–î
        category_all = await db_commands.get_all_services_category()  # –¢—è–Ω–µ–º –∏–∑ –ë–î –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        await state.update_data(services=[])

        await call.message.answer(f'–û—Ç–ª–∏—á–Ω–æ, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª. \n\n'
                             f'–ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —É—Å–ª—É–≥.',
                             reply_markup=get_menu_choice_services_all(0, category_all, 'mts'))
        # await state.update_data(services=[], sum_price=0)  # –ó–∞–¥–∞—ë–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await close_startup(dp)  # –û—Ç–∫–ª—é—á–∞–µ–º –ë–î

    @dp.callback_query_handler(category_services_touch_button.filter(way='mts'))
    async def services_edit_message(call: CallbackQuery, callback_data, state: FSMContext):
        '''–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–≥–¥–∞ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫ –∫–Ω–æ–ø–∫–∞–º —É—Å–ª—É–≥'''

        print('-' * 100)

        id_category = int(callback_data['id_category'])  # –ó–∞–±–∏—Ä–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
        await on_startup(dp)  # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
        services = await select_services_from_category(id_category)  # –¢—è–Ω–µ–º –≤—Å–µ —É—Å–ª—É–≥–∏ –∏–∑ –ë–î
        state_data = await state.get_data()  # –ó–∞–±–∏—Ä–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        data_for_text = await result_message_sum(state_data['services'])  # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ–∫—Å—Ç–∞
        await call.message.edit_text(f'–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É.\n\n'
                                     f'–†–∞–Ω–µ–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏:{data_for_text[0]}\n'
                                     f'–û–±—â–∞—è —Å—É–º–º–∞: {data_for_text[1]} —Ä—É–±.',
                                     reply_markup=get_menu_service(services, state_data['services'], 'mts'))

        await state.update_data(id_category=id_category)
        await close_startup(dp)

    @dp.callback_query_handler(choice_services_touch_button.filter(way='mts'))
    async def services_edit_message(call: CallbackQuery, callback_data, state: FSMContext):
        '''–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–∞–∂–¥–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö —Å —É—Å–ª—É–≥–∞–º–∏'''

        print('-' * 100)

        all_services = await state.get_data()
        list_services = all_services["services"]  # –ó–∞–±–∏—Ä–∞–µ–º –≤—Å–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏

        # –ü—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –Ω–∞–∂–∞—Ç–∏–∏ —É–±–∏—Ä–∞–µ—Ç —É—Å–ª—É–≥—É –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è, –ø—Ä–∏ –ø–µ—Ä–≤–æ–º - –¥–æ–±–∞–≤–ª—è–µ—Ç.
        if int(callback_data['id']) in list_services:
            list_services.remove(int(callback_data['id']))
        else:
            list_services.append(int(callback_data['id']))

        await state.update_data(services=list_services)  # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
        await call.answer()  # –æ—Ç–∫–ª—é—á–∞–µ–º —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏

        state_data = await state.get_data()  # –°–Ω–æ–≤–∞ –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        id_category = state_data['id_category']  # –ó–∞–±–∏—Ä–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
        await on_startup(dp)  # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
        services = await select_services_from_category(id_category)  # –ó–∞–±–∏—Ä–∞–µ–º –≤—Å–µ —É—Å–ª—É–≥–∏
        data_for_text = await result_message_sum(state_data['services'])  # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
        await call.message.edit_text(text=f'–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É.\n\n'
                                          f'–†–∞–Ω–µ–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏:{data_for_text[0]}\n'
                                          f'–û–±—â–∞—è —Å—É–º–º–∞: {data_for_text[1]} —Ä—É–±.',
                                     reply_markup=get_menu_service(services, state_data['services'], 'mts'))
        await close_startup(dp)  # –ó–∞–∫—Ä—ã–≤–∞–µ–º –ë–î

    @dp.callback_query_handler(text='back_to_category_mts')
    async def choose_service2(call: CallbackQuery, state: FSMContext):
        '''–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é"'''

        print('-' * 100)

        await on_startup(dp)  # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
        category_all = await db_commands.get_all_services_category()  # –¢—è–Ω–µ–º –∏–∑ –ë–î –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        call_data = await state.get_data()  # –ó–∞–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        data_for_text = await result_message_sum(call_data['services'])  # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
        await call.message.edit_text(f'–í—ã–±—Ä–∞–Ω—ã —É—Å–ª—É–≥–∏:{data_for_text[0]}\n'
                                     f'–û–±—â–∞—è —Å—É–º–º–∞: {data_for_text[1]} —Ä—É–±.\n',
                                     reply_markup=get_menu_choice_services_all(0, category_all, 'mts'))
        await close_startup(dp)  # –ó–∞–∫—Ä—ã–≤–∞–µ–º –ë–î

    # @dp.callback_query_handler(choose_data_and_time.filter())
    # async def done_choose(call: CallbackQuery, callback_data, state: FSMContext):
    #     ''' –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–±—Ä–∞–ª —Å–µ–±–µ —É—Å–ª—É–≥, —Ö–æ—á–µ—Ç –∑–∞–ø–∏—Å–∞—Ç—å—Å—è '''
    #
    #     print('*' * 100)
    #
    #     await on_startup(dp)  # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
    #     state_data = await state.get_data()  # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    #     data_for_text = await result_message_sum(state_data['services'])  # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
    #     await call.message.edit_text(f'–í—ã–±—Ä–∞–Ω—ã —É—Å–ª—É–≥–∏:{data_for_text[0]}\n'
    #                                  f'–û–±—â–∞—è —Å—É–º–º–∞: {data_for_text[1]} —Ä—É–±.\n',
    #                                  reply_markup=get_done_menu(way='mts'))
    #     await close_startup(dp)  # –ó–∞–∫—Ä—ã–≤–∞–µ–º –ë–î
    #
    #
    @dp.callback_query_handler(text='finish_mts')
    async def done_choose(call: CallbackQuery, state: FSMContext):
        ''' –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–±—Ä–∞–ª —Å–µ–±–µ —É—Å–ª—É–≥, —Ö–æ—á–µ—Ç –∑–∞–ø–∏—Å–∞—Ç—å—Å—è '''

        print('1-' * 100)

        await on_startup(dp)  # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
        state_data = await state.get_data()  # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        data_for_text = await result_message_sum(state_data['services'])  # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
        await call.message.edit_text(f'–°–ø–∞—Å–∏–±–æ! –í—ã –∑–∞–ø–∏—Å–∞–Ω—ã! –í—ã–≤–µ—Å—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø–∏—Å–∏')
        await close_startup(dp)  # –ó–∞–∫—Ä—ã–≤–∞–µ–º –ë–î

